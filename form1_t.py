# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'form1_t.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_teor1(object):
    def setupUi(self, teor1):
        teor1.setObjectName("teor1")
        teor1.resize(936, 475)
        teor1.setDocumentMode(False)
        teor1.setDockNestingEnabled(False)
        self.centralwidget = QtWidgets.QWidget(teor1)
        self.centralwidget.setObjectName("centralwidget")
        self.closebutton = QtWidgets.QPushButton(self.centralwidget)
        self.closebutton.setGeometry(QtCore.QRect(880, 0, 51, 41))
        self.closebutton.setMouseTracking(False)
        self.closebutton.setStyleSheet("QPushButton{\n"
"border: 1px solid #555;\n"
"padding: 5 px ;\n"
"border-top-right-radius: 11px;\n"
"background: black;\n"
"}\n"
"QPushButton:hover { background: rgba(255,255,255,.2); }\n"
"QPushButton:pressed { background: white; }")
        self.closebutton.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("photos/крестик.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.closebutton.setIcon(icon)
        self.closebutton.setDefault(False)
        self.closebutton.setObjectName("closebutton")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 0, 861, 41))
        self.label.setStyleSheet("QLabel{\n"
"    font: 75 italic 22pt \"MS Sans Serif\";\n"
"color: white;\n"
"border: 1px solid #555;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"}")
        self.label.setObjectName("label")
        self.groupBox_2 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_2.setGeometry(QtCore.QRect(10, 50, 921, 381))
        self.groupBox_2.setStyleSheet("QGroupBox{\n"
"border-bottom-left-radius: 11px;\n"
"border-bottom-right-radius: 11px;\n"
"background: black;\n"
"}")
        self.groupBox_2.setTitle("")
        self.groupBox_2.setObjectName("groupBox_2")
        self.label_13 = QtWidgets.QLabel(self.groupBox_2)
        self.label_13.setGeometry(QtCore.QRect(20, 20, 47, 13))
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.groupBox_2)
        self.label_14.setGeometry(QtCore.QRect(20, 30, 47, 13))
        self.label_14.setObjectName("label_14")
        self.stackedWidget = QtWidgets.QStackedWidget(self.groupBox_2)
        self.stackedWidget.setGeometry(QtCore.QRect(10, 10, 901, 331))
        self.stackedWidget.setStyleSheet("color:white;\n"
"background:black;\n"
"")
        self.stackedWidget.setObjectName("stackedWidget")
        self.page = QtWidgets.QWidget()
        self.page.setObjectName("page")
        self.textBrowser = QtWidgets.QTextBrowser(self.page)
        self.textBrowser.setGeometry(QtCore.QRect(0, 10, 901, 341))
        self.textBrowser.setStyleSheet("QTextBrowser{\n"
"color: white;\n"
"border: 1px solid black;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"color: white;\n"
"}")
        self.textBrowser.setObjectName("textBrowser")
        self.stackedWidget.addWidget(self.page)
        self.page_2 = QtWidgets.QWidget()
        self.page_2.setObjectName("page_2")
        self.label_2 = QtWidgets.QLabel(self.page_2)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 111, 31))
        self.label_2.setStyleSheet("\n"
"font: 18pt \"MS Sans Serif\";")
        self.label_2.setObjectName("label_2")
        self.label_4 = QtWidgets.QLabel(self.page_2)
        self.label_4.setGeometry(QtCore.QRect(10, 70, 281, 271))
        self.label_4.setStyleSheet("background-image: url(:/newPrefix/тет 1.png);")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.label_3 = QtWidgets.QLabel(self.page_2)
        self.label_3.setGeometry(QtCore.QRect(600, 90, 291, 231))
        self.label_3.setStyleSheet("background-image: url(:/newPrefix/тет 2.jpg);")
        self.label_3.setText("")
        self.label_3.setObjectName("label_3")
        self.textBrowser_2 = QtWidgets.QTextBrowser(self.page_2)
        self.textBrowser_2.setGeometry(QtCore.QRect(120, 0, 741, 51))
        self.textBrowser_2.setStyleSheet("QTextBrowser{\n"
"color: white;\n"
"border: 1px solid black;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"color: white;\n"
"}")
        self.textBrowser_2.setObjectName("textBrowser_2")
        self.textBrowser_3 = QtWidgets.QTextBrowser(self.page_2)
        self.textBrowser_3.setGeometry(QtCore.QRect(310, 70, 271, 271))
        self.textBrowser_3.setStyleSheet("QTextBrowser{\n"
"color: white;\n"
"border: 1px solid black;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"color: white;\n"
"}")
        self.textBrowser_3.setObjectName("textBrowser_3")
        self.stackedWidget.addWidget(self.page_2)
        self.page_3 = QtWidgets.QWidget()
        self.page_3.setObjectName("page_3")
        self.label_5 = QtWidgets.QLabel(self.page_3)
        self.label_5.setGeometry(QtCore.QRect(0, 0, 111, 31))
        self.label_5.setStyleSheet("\n"
"font: 18pt \"MS Sans Serif\";")
        self.label_5.setObjectName("label_5")
        self.label_7 = QtWidgets.QLabel(self.page_3)
        self.label_7.setGeometry(QtCore.QRect(10, 70, 241, 241))
        self.label_7.setStyleSheet("background-image: url(:/newPrefix/куб1.png);")
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.label_8 = QtWidgets.QLabel(self.page_3)
        self.label_8.setGeometry(QtCore.QRect(540, 70, 351, 241))
        self.label_8.setStyleSheet("background-image: url(:/newPrefix/куб2.png);")
        self.label_8.setText("")
        self.label_8.setObjectName("label_8")
        self.label_12 = QtWidgets.QLabel(self.page_3)
        self.label_12.setGeometry(QtCore.QRect(130, 10, 511, 21))
        self.label_12.setStyleSheet("color: rgb(255, 255, 255);\n"
"font: 12pt \"MS Shell Dlg 2\";")
        self.label_12.setObjectName("label_12")
        self.textBrowser_4 = QtWidgets.QTextBrowser(self.page_3)
        self.textBrowser_4.setGeometry(QtCore.QRect(270, 40, 251, 301))
        self.textBrowser_4.setStyleSheet("QTextBrowser{\n"
"color: white;\n"
"border: 1px solid black;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"color: white;\n"
"}")
        self.textBrowser_4.setObjectName("textBrowser_4")
        self.stackedWidget.addWidget(self.page_3)
        self.page_4 = QtWidgets.QWidget()
        self.page_4.setObjectName("page_4")
        self.label_6 = QtWidgets.QLabel(self.page_4)
        self.label_6.setGeometry(QtCore.QRect(0, 0, 111, 31))
        self.label_6.setStyleSheet("\n"
"font: 18pt \"MS Sans Serif\";")
        self.label_6.setObjectName("label_6")
        self.label_9 = QtWidgets.QLabel(self.page_4)
        self.label_9.setGeometry(QtCore.QRect(0, 90, 301, 241))
        self.label_9.setStyleSheet("background-image: url(:/newPrefix/призма1.png);")
        self.label_9.setText("")
        self.label_9.setObjectName("label_9")
        self.label_10 = QtWidgets.QLabel(self.page_4)
        self.label_10.setGeometry(QtCore.QRect(540, 20, 361, 311))
        self.label_10.setStyleSheet("background-image: url(:/newPrefix/призма2.png);")
        self.label_10.setText("")
        self.label_10.setObjectName("label_10")
        self.textBrowser_5 = QtWidgets.QTextBrowser(self.page_4)
        self.textBrowser_5.setGeometry(QtCore.QRect(120, 0, 401, 71))
        self.textBrowser_5.setStyleSheet("QTextBrowser{\n"
"color: white;\n"
"border: 1px solid black;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"color: white;\n"
"}")
        self.textBrowser_5.setObjectName("textBrowser_5")
        self.textBrowser_6 = QtWidgets.QTextBrowser(self.page_4)
        self.textBrowser_6.setGeometry(QtCore.QRect(320, 80, 201, 261))
        self.textBrowser_6.setStyleSheet("QTextBrowser{\n"
"color: white;\n"
"border: 1px solid black;\n"
"border-top-left-radius: 11px;\n"
"background: black;\n"
"font-weight: 3;\n"
"text-transform: capitalize;\n"
"font-size: 25;\n"
"color: white;\n"
"}")
        self.textBrowser_6.setObjectName("textBrowser_6")
        self.stackedWidget.addWidget(self.page_4)
        self.tomainbutton = QtWidgets.QPushButton(self.groupBox_2)
        self.tomainbutton.setGeometry(QtCore.QRect(814, 342, 91, 31))
        self.tomainbutton.setStyleSheet("QPushButton {\n"
"  display: inline-block;\n"
"  color: white;\n"
"  text-decoration: none;\n"
"  user-select: none;\n"
"  outline: none;\n"
"  border: 2px solid white;\n"
"  border-radius: 1px;\n"
"  transition: 0.2s;\n"
"} \n"
"QPushButton:hover { background: rgba(255,255,255,.2); }\n"
"QPushButton:pressed { background: white; }")
        self.tomainbutton.setObjectName("tomainbutton")
        self.groupBox_2.raise_()
        self.closebutton.raise_()
        self.label.raise_()
        teor1.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(teor1)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 936, 21))
        self.menubar.setObjectName("menubar")
        teor1.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(teor1)
        self.statusbar.setObjectName("statusbar")
        teor1.setStatusBar(self.statusbar)

        self.retranslateUi(teor1)
        self.stackedWidget.setCurrentIndex(3)
        QtCore.QMetaObject.connectSlotsByName(teor1)

    def retranslateUi(self, teor1):
        _translate = QtCore.QCoreApplication.translate
        teor1.setWindowTitle(_translate("teor1", "MainWindow"))
        self.label.setText(_translate("teor1", "Метод следов.Теория."))
        self.label_13.setText(_translate("teor1", "TextLabel"))
        self.label_14.setText(_translate("teor1", "TextLabel"))
        self.textBrowser.setHtml(_translate("teor1", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:0; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'georgia,serif\'; font-size:11pt; font-weight:600; text-decoration: underline; color:#ffffff;\">Следом</span><span style=\" font-family:\'georgia,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\"> называют прямую пересечения плоскости сечения и плоскости какой-либо грани многогранника. Чтобы построить след, достаточно знать две его точки, т. е. точки, лежащие одновременно в секущей плоскости и плоскости рассматриваемой грани.</span></p>\n"
"<p align=\"justify\" style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'georgia,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\"><br /></p>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'georgia,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\">Основные правила построения сечений методом следов:</span></p>\n"
"<ul style=\"margin-top: 0px; margin-bottom: 0px; margin-left: 0px; margin-right: 0px; -qt-list-indent: 1;\"><li style=\" font-family:\'Georgia,Times New Roman,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\" style=\" margin-top:12px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'georgia,serif\'; font-size:large;\">Если даны (или уже построены) две точки плоскости сечения на одной грани многогранника, то след сечения этой плоскости – прямая, проходящая через эти три точки.</span></li>\n"
"<li style=\" font-family:\'Georgia,Times New Roman,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'georgia,serif\'; font-size:large;\">Если дана (или уже построена) прямая пересечения плоскости сечения с основанием многогранника (след на основании) и есть точка, принадлежащая определенной боковой грани, то нужно определить точку пересечения данного следа с этой боковой гранью ( точка пересечения данного следа с общей прямой основания и данной боковой грани)</span></li>\n"
"<li style=\" font-family:\'Georgia,Times New Roman,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'georgia,serif\'; font-size:large;\">Точку пересечения плоскости сечения с основанием можно определить как точку пересечения какой-либо прямой в плоскости сечения с ее проекцией на плоскость основания.</span></li></ul>\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'georgia,serif\'; font-size:11pt; font-weight:400; color:#ffffff;\">  То есть, суть метода заключается в построении вспомогательной прямой, являющейся изображением линии пересечения секущей плоскости с плоскостью какой-либо грани фигуры. Удобнее всего строить изображение линии пересечения секущей плоскости с плоскостью нижнего основания. Используя след, легко построить изображения точек секущей плоскости, находящихся на боковых ребрах или гранях фигуры. </span></p></body></html>"))
        self.label_2.setText(_translate("teor1", "Пример 1"))
        self.textBrowser_2.setHtml(_translate("teor1", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:0; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:11pt; font-weight:600; font-style:italic; color:#ffffff;\">Задача:</span><span style=\" font-family:\'Calibri\'; font-size:11pt; color:#ffffff;\"> постройте сечение тетраэдра плоскостью, проходящей через точки М, N, K. Точка М лежит на ребре AD, N — на ребре DC, К — на ребре АВ.</span></p></body></html>"))
        self.textBrowser_3.setHtml(_translate("teor1", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:0; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-weight:600; font-style:italic; color:#ffffff;\">Решение:</span><span style=\" font-size:12pt; font-weight:600; font-style:italic; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Проведем МК в плоскости грани ABD и MN в плоскости грани ADC.</span><span style=\" font-size:12pt; font-style:italic; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Продлим отрезки MN и АС.</span><span style=\" font-size:12pt; font-style:italic; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Проведем РК в плоскости нижней грани.</span><span style=\" font-size:12pt; font-style:italic; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Получившийся четырехугольник  — искомое сечение.</span><span style=\" font-size:12pt; font-style:italic; color:#ffffff;\"> </span></p></body></html>"))
        self.label_5.setText(_translate("teor1", "Пример 2"))
        self.label_12.setText(_translate("teor1", "Задача: Построить сечение куба, проходящее через точки М, N, L"))
        self.textBrowser_4.setHtml(_translate("teor1", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:0; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-weight:600; font-style:italic; color:#ffffff;\">Решение:</span><span style=\" font-size:12pt; font-weight:600; font-style:italic; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Проведем МL в плоскости грани AA1D1D.</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Пересечем ML и A1D1 в точке X1 и ML с D1D в точке X2. </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Соединим X1 и N в плоскости A1B1C1D1, поставим точку K на пересечении X1N и A1B1. </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">Продлим KN и пересечем с D1C1 в точке X3. Соединим X2 и X3 в плоскости DD1C1C и расставим точки T и P на пересечениях с гранями DC и C1C соответственною</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-style:italic; color:#ffffff;\">MNKTPL  — искомое сечение.</span><span style=\" font-size:12pt; font-style:italic; color:#ffffff;\"> </span></p></body></html>"))
        self.label_6.setText(_translate("teor1", "Пример 3"))
        self.textBrowser_5.setHtml(_translate("teor1", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:0; font-style:normal;\">\n"
"<p align=\"justify\" style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:12pt; font-weight:600; color:#ffffff;\">Задача</span><span style=\" font-family:\'Calibri\'; font-size:12pt; font-weight:400; color:#ffffff;\">: построить методом следов  сечение шестиугольной призмы ABCDEFA1B1C1D1E1F1 плоскостью, проходящей через точки PQR.</span><span style=\" font-size:12pt; font-weight:400; color:#ffffff;\"> </span></p></body></html>"))
        self.textBrowser_6.setHtml(_translate("teor1", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:0; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" color:#ffffff;\">Решение:</span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:10pt; color:#ffffff;\">Проводим прямую PR секущей плоскости, а также ее проекцию в плоскости основания AR. Прямая CD принадлежит плоскости основания и пересечет прямую AR в точке S. Заметим, что точка S не является точкой секущей плоскости.</span><span style=\" font-size:10pt; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:10pt; color:#ffffff;\">Из точки  S проводим перпендикуляр к плоскости основания, его пересечение с прямой PV  – точка R – принадлежит секущей плоскости, а также плоскости грани CDD1C1 .</span><span style=\" font-size:10pt; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:10pt; color:#ffffff;\">Соединим точки  V и Q. Прямая  VQ пересечет ребро призмы  DD1 в точке X.</span><span style=\" font-size:10pt; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:10pt; color:#ffffff;\">Заполучив точку X, можем провести отрезок RX. Вот тут-то нам и понадобится аксиоматический метод. Так как грань  AA1B1B  параллельна грани EE1D1D, то плоскость рассечет ее по прямой, которая будет параллельна RX. Вот и проведем через P такую параллельную прямой  RX прямую. Она пересечет ребро A1B1  в точке Y.</span><span style=\" font-size:10pt; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:10pt; color:#ffffff;\">Проведем также через точку P прямую, параллельную прямой VQ. Это можно сделать, так как грань CC1D1D параллельна грани AA1F1F. Прямая эта пересечет ребро AF в точке M.</span><span style=\" font-size:10pt; color:#ffffff;\"> </span></p>\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><span style=\" font-family:\'Calibri\'; font-size:10pt; color:#ffffff;\">Соединяем точки отрезками.</span><span style=\" font-size:10pt; color:#ffffff;\"> </span></p>\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-size:10pt;\"><br /></p></body></html>"))
        self.tomainbutton.setText(_translate("teor1", "Главное меню"))
import photos_rc
